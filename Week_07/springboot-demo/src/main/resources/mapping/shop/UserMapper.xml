<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geektime.springbootdemo.mapper.shop.UserMapper">
  <resultMap id="BaseResultMap" type="com.geektime.springbootdemo.entity.shop.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="user_nick" jdbcType="VARCHAR" property="userNick" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="user_birthday" jdbcType="TIMESTAMP" property="userBirthday" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_state" jdbcType="TINYINT" property="userState" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_code, user_nick, gender, user_birthday, user_address, user_phone, user_email, 
    avatar, last_login_ip, last_login_date, salt, password, user_state, remark, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.geektime.springbootdemo.entity.shop.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.geektime.springbootdemo.entity.shop.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (user_code, user_nick, gender, 
      user_birthday, user_address, user_phone, 
      user_email, avatar, last_login_ip, 
      last_login_date, salt, password, 
      user_state, remark, create_time, 
      update_time)
    values (#{userCode,jdbcType=VARCHAR}, #{userNick,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{userBirthday,jdbcType=TIMESTAMP}, #{userAddress,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{lastLoginDate,jdbcType=TIMESTAMP}, #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userState,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.geektime.springbootdemo.entity.shop.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userCode != null">
        user_code,
      </if>
      <if test="userNick != null">
        user_nick,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userState != null">
        user_state,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userNick != null">
        #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geektime.springbootdemo.entity.shop.User">
    update t_user
    <set>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userNick != null">
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        user_state = #{userState,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geektime.springbootdemo.entity.shop.User">
    update t_user
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_nick = #{userNick,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      salt = #{salt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>