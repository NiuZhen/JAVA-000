<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geektime.springbootdemo.mapper.shop.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.geektime.springbootdemo.entity.shop.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="goods_amount" jdbcType="DECIMAL" property="goodsAmount" />
    <result column="money_paid" jdbcType="DECIMAL" property="moneyPaid" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="discount" jdbcType="DECIMAL" property="discount" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="shipping_status" jdbcType="TINYINT" property="shippingStatus" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="pay_id" jdbcType="TINYINT" property="payId" />
    <result column="pay_name" jdbcType="VARCHAR" property="payName" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="shipping_time" jdbcType="TIMESTAMP" property="shippingTime" />
    <result column="country" jdbcType="SMALLINT" property="country" />
    <result column="province" jdbcType="SMALLINT" property="province" />
    <result column="city" jdbcType="SMALLINT" property="city" />
    <result column="district" jdbcType="SMALLINT" property="district" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_code, user_id, create_time, update_time, goods_amount, money_paid, order_amount, 
    discount, order_status, shipping_status, pay_status, pay_id, pay_name, add_time, 
    confirm_time, pay_time, shipping_time, country, province, city, district, address
  </sql>
  <select id="selectByExample" parameterType="com.geektime.springbootdemo.entity.shop.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.geektime.springbootdemo.entity.shop.Orders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order (order_code, user_id, create_time, 
      update_time, goods_amount, money_paid, 
      order_amount, discount, order_status, 
      shipping_status, pay_status, pay_id, 
      pay_name, add_time, confirm_time, 
      pay_time, shipping_time, country, 
      province, city, district, 
      address)
    values (#{orderCode,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{goodsAmount,jdbcType=DECIMAL}, #{moneyPaid,jdbcType=DECIMAL}, 
      #{orderAmount,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL}, #{orderStatus,jdbcType=TINYINT}, 
      #{shippingStatus,jdbcType=TINYINT}, #{payStatus,jdbcType=TINYINT}, #{payId,jdbcType=TINYINT}, 
      #{payName,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{shippingTime,jdbcType=TIMESTAMP}, #{country,jdbcType=SMALLINT}, 
      #{province,jdbcType=SMALLINT}, #{city,jdbcType=SMALLINT}, #{district,jdbcType=SMALLINT}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.geektime.springbootdemo.entity.shop.Orders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="goodsAmount != null">
        goods_amount,
      </if>
      <if test="moneyPaid != null">
        money_paid,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="shippingStatus != null">
        shipping_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="payId != null">
        pay_id,
      </if>
      <if test="payName != null">
        pay_name,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="shippingTime != null">
        shipping_time,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsAmount != null">
        #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="moneyPaid != null">
        #{moneyPaid,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="shippingStatus != null">
        #{shippingStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=TINYINT},
      </if>
      <if test="payName != null">
        #{payName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingTime != null">
        #{shippingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        #{country,jdbcType=SMALLINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=SMALLINT},
      </if>
      <if test="district != null">
        #{district,jdbcType=SMALLINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geektime.springbootdemo.entity.shop.Orders">
    update t_order
    <set>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsAmount != null">
        goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="moneyPaid != null">
        money_paid = #{moneyPaid,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="shippingStatus != null">
        shipping_status = #{shippingStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payId != null">
        pay_id = #{payId,jdbcType=TINYINT},
      </if>
      <if test="payName != null">
        pay_name = #{payName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingTime != null">
        shipping_time = #{shippingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=SMALLINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=SMALLINT},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=SMALLINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geektime.springbootdemo.entity.shop.Orders">
    update t_order
    set order_code = #{orderCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      money_paid = #{moneyPaid,jdbcType=DECIMAL},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      order_status = #{orderStatus,jdbcType=TINYINT},
      shipping_status = #{shippingStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_id = #{payId,jdbcType=TINYINT},
      pay_name = #{payName,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      shipping_time = #{shippingTime,jdbcType=TIMESTAMP},
      country = #{country,jdbcType=SMALLINT},
      province = #{province,jdbcType=SMALLINT},
      city = #{city,jdbcType=SMALLINT},
      district = #{district,jdbcType=SMALLINT},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>